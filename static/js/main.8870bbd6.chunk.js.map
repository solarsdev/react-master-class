{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","getCoins","fetch","then","res","json","slice","Chart","coinId","useQuery","today","Math","floor","Date","getTime","start","end","getCoinHistorical","isLoading","historicals","data","type","series","map","historicalData","time_close","open","high","toFixed","low","close","options","chart","width","height","toolbar","show","zoom","enabled","background","theme","mode","grid","yaxis","labels","xaxis","formatter","value","toUTCString","Container","styled","div","ItemHeader","Item","props","price","plusColor","minusColor","Price","tickerData","quotes","USD","percent_change_1h","percent_change_24h","percent_change_7d","percent_change_30d","Header","BackBtn","accentColor","h3Size","PaletteBtn","Title","h1","h1Size","Overview","OverviewItem","textSize","textColor","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","isMatchChart","useMatch","isMatchPrice","getCoin","isGetCoinLoading","coinData","getTicker","isGetTickerLoading","to","icon","faList","name","faPalette","rank","symbol","open_source","description","total_supply","max_supply","path","element","CoinsList","ul","li","bgColor","Coins","coins","console","log","useTheme","onClick","coin","id","src","toLowerCase","alt","Router","darkTheme","h2Size","lightTheme","GlobalStyle","createGlobalStyle","reset","App","useState","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.8870bbd6.chunk.js","sourcesContent":["const BASE_URL = 'https://api.coinpaprika.com/v1';\n\nexport const getCoins = () => {\n  return fetch(`${BASE_URL}/coins`)\n    .then((res) => res.json())\n    .then((json) => json.slice(0, 50));\n};\n\nexport const getCoin = (coinId: string) => {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((res) => res.json());\n};\n\nexport const getTicker = (coinId: string) => {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((res) => res.json());\n};\n\nexport const getCoinHistorical = (coinId: string) => {\n  const today = Math.floor(new Date().getTime() / 1000);\n  const start = today - 1209600; // 2 weeks ago\n  const end = today;\n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${start}&end=${end}`).then(\n    (res) => res.json(),\n  );\n};\n","import { useQuery } from 'react-query';\nimport { getCoinHistorical } from '../api';\nimport ChartProps from '../interfaces/ChartProps';\nimport { GetCoinHistorical } from '../interfaces/GetCoinHistorical';\nimport ApexChart from 'react-apexcharts';\n\nconst Chart = ({ coinId }: ChartProps) => {\n  const { isLoading, data: historicals } = useQuery<GetCoinHistorical[]>(\n    ['getCoinHistorical', coinId],\n    () => getCoinHistorical(coinId),\n  );\n\n  return isLoading ? (\n    <div>Loading...</div>\n  ) : (\n    <ApexChart\n      type='candlestick'\n      series={[\n        {\n          data: historicals?.map((historicalData) => {\n            return [\n              new Date(historicalData.time_close).getTime(),\n              [\n                historicalData.open,\n                historicalData.high.toFixed(3),\n                historicalData.low.toFixed(3),\n                historicalData.close.toFixed(3),\n              ],\n            ];\n          }),\n        },\n      ]}\n      options={{\n        chart: {\n          width: 500,\n          height: 500,\n          toolbar: { show: false },\n          zoom: { enabled: false },\n          background: 'transparent',\n        },\n        theme: {\n          mode: 'dark',\n        },\n        grid: {\n          show: false,\n        },\n        yaxis: {\n          labels: {\n            show: false,\n          },\n        },\n        xaxis: {\n          labels: {\n            formatter: function (value) {\n              return new Date(value).toUTCString().slice(5, 11);\n            },\n          },\n        },\n      }}\n    />\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\nimport { GetTicker } from '../interfaces/GetTicker';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-flow: 1fr;\n`;\n\nconst ItemHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Item = styled.div<{ price?: number }>`\n  padding: 20px;\n  color: ${(props) =>\n    props.price && props.price >= 0 ? props.theme.plusColor : props.theme.minusColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Price = ({ tickerData }: { tickerData?: GetTicker }) => {\n  return (\n    <Container>\n      <ItemHeader>1h</ItemHeader>\n      <ItemHeader>24h</ItemHeader>\n      <ItemHeader>Week</ItemHeader>\n      <ItemHeader>Month</ItemHeader>\n      <Item price={tickerData?.quotes.USD.percent_change_1h}>\n        {tickerData?.quotes.USD.percent_change_1h}%\n      </Item>\n      <Item price={tickerData?.quotes.USD.percent_change_24h}>\n        {tickerData?.quotes.USD.percent_change_24h}%\n      </Item>\n      <Item price={tickerData?.quotes.USD.percent_change_7d}>\n        {tickerData?.quotes.USD.percent_change_7d}%\n      </Item>\n      <Item price={tickerData?.quotes.USD.percent_change_30d}>\n        {tickerData?.quotes.USD.percent_change_30d}%\n      </Item>\n    </Container>\n  );\n};\n\nexport default Price;\n","import { useQuery } from 'react-query';\nimport { Routes, Route, useLocation, useParams, Link, useMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getCoin, getTicker } from '../api';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faList, faPalette } from '@fortawesome/free-solid-svg-icons';\nimport { GetCoin } from '../interfaces/GetCoin';\nimport { GetTicker } from '../interfaces/GetTicker';\nimport Chart from './Chart';\nimport Price from './Price';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.div`\n  height: 15vh;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst BackBtn = styled.div`\n  color: ${(props) => props.theme.accentColor};\n  font-size: ${(props) => props.theme.h3Size};\n`;\n\nconst PaletteBtn = styled.div`\n  color: ${(props) => props.theme.accentColor};\n  font-size: ${(props) => props.theme.h3Size};\n`;\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: ${(props) => props.theme.h1Size};\n`;\n\nconst Overview = styled.div`\n  padding: 20px;\n  border-radius: 20px;\n  background-color: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst OverviewItem = styled.div`\n  font-size: ${(props) => props.theme.textSize};\n  color: ${(props) => props.theme.textColor};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Description = styled.p`\n  color: ${(props) => props.theme.textColor};\n  margin: 20px 10px;\n`;\n\nconst Tabs = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 20px 0px;\n`;\n\nconst Tab = styled.div<{ isActive: boolean }>`\n  width: 200px;\n  padding: 10px;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.7);\n  color: ${({ isActive, theme: { accentColor, textColor } }) =>\n    isActive ? accentColor : textColor};\n  display: flex;\n  justify-content: center;\n`;\n\ninterface URLParams {\n  coinId: string;\n}\n\nconst Coin = () => {\n  const { coinId } = useParams() as URLParams;\n  const { state } = useLocation();\n\n  const isMatchChart = useMatch('/:coinId/chart');\n  const isMatchPrice = useMatch('/:coinId/price');\n\n  const { isLoading: isGetCoinLoading, data: coinData } = useQuery<GetCoin>(\n    ['getCoin', coinId],\n    () => getCoin(coinId),\n  );\n  const { isLoading: isGetTickerLoading, data: tickerData } = useQuery<GetTicker>(\n    ['getTicker', coinId],\n    () => getTicker(coinId),\n  );\n\n  const isLoading = isGetCoinLoading || isGetTickerLoading;\n\n  return (\n    <Container>\n      <Header>\n        <Link to={'/'}>\n          <BackBtn>\n            <FontAwesomeIcon icon={faList} />\n          </BackBtn>\n        </Link>\n        <Title>{state?.name ? state?.name : isLoading ? coinId : coinData?.name}</Title>\n        <PaletteBtn>\n          <FontAwesomeIcon icon={faPalette} />\n        </PaletteBtn>\n      </Header>\n      {isLoading ? (\n        'Loading...'\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>RANK:</span>\n              <span>{coinData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>SYMBOL:</span>\n              <span>{coinData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>OPEN SOURCE:</span>\n              <span>{coinData?.open_source ? 'Yes' : 'No'}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{coinData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>TOTAL SUPPLY:</span>\n              <span>{tickerData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>MAX SUPPLY:</span>\n              <span>{tickerData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Link to={`/${coinId}/chart`}>\n              <Tab isActive={isMatchChart !== null}>Chart</Tab>\n            </Link>\n            <Link to={`/${coinId}/price`}>\n              <Tab isActive={isMatchPrice !== null}>Price</Tab>\n            </Link>\n          </Tabs>\n          <Routes>\n            <Route path='chart' element={<Chart coinId={coinId} />} />\n            <Route path='price' element={<Price tickerData={tickerData} />} />\n          </Routes>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Coin;\n","import styled, { useTheme } from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { getCoins } from '../api';\nimport { GetCoins } from '../interfaces/GetCoins';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPalette } from '@fortawesome/free-solid-svg-icons';\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.div`\n  height: 15vh;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst PaletteBtn = styled.div`\n  color: ${(props) => props.theme.accentColor};\n  font-size: ${(props) => props.theme.h3Size};\n  cursor: pointer;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  display: flex;\n  align-items: center;\n\n  padding: 20px;\n  margin: 20px 0px;\n  border-radius: 10px;\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.bgColor};\n\n  transition: color 0.15s ease-in-out;\n  &:hover {\n    color: ${(props) => props.theme.accentColor};\n  }\n  img {\n    width: 35px;\n    height: 35px;\n    margin-right: 10px;\n  }\n`;\n\nconst Title = styled.h1`\n  color: ${(props) => props.theme.accentColor};\n  font-size: ${(props) => props.theme.h1Size};\n`;\n\nconst Coins = () => {\n  const { isLoading, data: coins } = useQuery<GetCoins[]>('getCoins', getCoins);\n  const onClick = () => {};\n  console.log(useTheme());\n  return (\n    <Container>\n      <Header>\n        <div></div>\n        <Title>Crypto Tracker</Title>\n        <PaletteBtn onClick={onClick}>\n          <FontAwesomeIcon icon={faPalette} />\n        </PaletteBtn>\n      </Header>\n      <CoinsList>\n        {isLoading\n          ? 'Loading...'\n          : coins?.map((coin) => (\n              <Link key={coin.id} to={`/${coin.id}`} state={{ name: coin.name }}>\n                <Coin>\n                  <img\n                    src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                    alt={coin.name}\n                  />\n                  {coin.name} &rarr;\n                </Coin>\n              </Link>\n            ))}\n      </CoinsList>\n    </Container>\n  );\n};\n\nexport default Coins;\n","import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Coin from './routes/Coin';\nimport Coins from './routes/Coins';\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path='/' element={<Coins />} />\n        <Route path='/:coinId/*' element={<Coin />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { DefaultTheme } from 'styled-components';\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: '#14213d',\n  textColor: '#e5e5e5',\n  accentColor: '#fca311',\n  plusColor: '#43A806',\n  minusColor: '#E15241',\n  h1Size: '48px',\n  h2Size: '36px',\n  h3Size: '24px',\n  textSize: '16px',\n};\n\nexport const lightTheme: DefaultTheme = {\n  textColor: '#14213d',\n  bgColor: '#e5e5e5',\n  accentColor: '#fca311',\n  plusColor: '#43A806',\n  minusColor: '#E15241',\n  h1Size: '48px',\n  h2Size: '36px',\n  h3Size: '24px',\n  textSize: '16px',\n};\n","import Router from './Router';\nimport { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme, lightTheme } from './theme';\nimport { useState } from 'react';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&family=Source+Sans+Pro:wght@300;400&display=swap');\n  ${reset}\n  * {\n\t\tbox-sizing: border-box;\n\t}\n\tbody {\n\t\tfont-family: 'Source Sans Pro', sans-serif;\n    background-color: ${(props) => props.theme.bgColor};\n    color: ${(props) => props.theme.textColor};\n    font-size: ${(props) => props.theme.textSize};\n\t}\n\ta {\n\t\ttext-decoration: none;\n    color: inherit;\n\t}\n`;\n\nfunction App() {\n  const [theme, setTheme] = useState('dark');\n  const toggleTheme = () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light');\n  };\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={false} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}